# Сложность, тестирование, особые случаи

# Задача 1. 
# Дана строка в формате UTF-8. Найти самй часто встречающийся символ. Если несколько символо встречаются одинаково часто, то выводим любой. 

def task1_1(string: str) -> str:
    result = 0
    for i in string:
        count = 0 
        for j in string: 
            if i == j:
                count += 1
        if result < count:
            result = count
            letter = i
    return letter
# такой вариант решения не очень хороший, т.к. мы делаем много лишних действий


# выпишем все символы и будем считать только их, чтобы не делать лишней работы 
def task1_2(string):
    for i in string:
        count = 0 
        for j in set(string): 
            if i == j:
                count += 1
        if result < count:
            result = count
            letter = i
    return letter
# мы перебираем сроку не по всем символам, а только по уникальным сложность - О(Н*К) К - количество уникальных символов
# такой вариант решения тоже не лучший, т.к. при н = к итераций будет все равно столько же как и в пером варианте

def task1_3(string):
    count_dict = {}
    max_val = 0
    for i in string:
        if i not in count_dict:
            count_dict[i] = 0
        count_dict[i] += 1
        if count_dict[i]>max_val:
            max_val = count_dict[i]
    return max_val
# в таком варианте сложность О(н+к) поэтому сложность такого алгоритма полуилась <= O(2н) ну и соответственно сложность О(н)

#  Тестирование 

# Что обычно нужно тестировать?
# Тесты из условия
# Общие случаи
# Особые слычаи

# Например, в задаче про максимум последовательности будет хорошо протестировать
# случайные величины
# повторяющиеся послеодвательности
# один символ
# пустая строка
# все отрицательные 


# Задача 2.
# Даны три целых числа а б с. Найдите все корни квадратного уравнения ax^2 + bx + c = 0
# И выведите их в порядке возрастания 
from math import sqrt
from random import randint

def task2_1(a, b, c):
    d = b**2 - 4*a*c
    if a != 0 and b != 0:
        if d > 0:
            x1 = (-b + sqrt(d)) / (2*a)
            x2 = (-b - sqrt(d)) / (2*a)
            return (x1, x2) if x1 < x2 else (x2, x1)
        elif d == 0:
            x = -b / (2*a)
            return x
        else:
            return 'Пустое множество'
    else:
        if b != 0:
            return -c/b
        else:
            return 'Любое значение' if c == 0 else 'Пустое множество'

print(task2_1(-5, 4, 1))